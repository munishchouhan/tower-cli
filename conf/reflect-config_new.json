[
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.Object;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Ljava.math.BigDecimal;"
  },
  {
    "name": "[Ljava.util.Locale;"
  },
  {
    "name": "[Ljavax.ws.rs.core.MediaType;"
  },
  {
    "name": "[Lorg.mockserver.model.NottableString;"
  },
  {
    "name": "[Lorg.mockserver.serialization.model.ExpectationDTO;"
  },
  {
    "name": "apple.security.AppleProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.OutputStreamAppender",
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.Encoder",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods": [
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods": [
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.aayushatharva.brotli4j.Brotli4jLoader"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.google.gson.Gson"
  },
  {
    "name": "com.lmax.disruptor.AbstractSequencer",
    "fields": [
      {
        "name": "gatingSequences"
      }
    ]
  },
  {
    "name": "com.lmax.disruptor.Value",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "com.networknt.schema.AdditionalPropertiesValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.AnyOfValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.EnumValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.ItemsValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.OneOfValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.PatternPropertiesValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.PropertiesValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.RefValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.RequiredValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.networknt.schema.TypeValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "com.fasterxml.jackson.databind.JsonNode",
          "com.networknt.schema.JsonSchema",
          "com.networknt.schema.ValidationContext"
        ]
      }
    ]
  },
  {
    "name": "com.squareup.moshi.Moshi"
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "com.sun.jndi.url.java.javaURLContextFactory"
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "groovy.lang.Binding"
  },
  {
    "name": "groovy.lang.Closure"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$1"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.channel.AbstractChannelHandlerContext",
    "fields": [
      {
        "name": "handlerState"
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelHandlerAdapter",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundBuffer",
    "fields": [
      {
        "name": "totalPendingSize"
      },
      {
        "name": "unwritable"
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelConfig",
    "fields": [
      {
        "name": "autoRead"
      },
      {
        "name": "writeBufferWaterMark"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline",
    "fields": [
      {
        "name": "estimatorHandle"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.SimpleChannelInboundHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.socket.nio.NioServerSocketChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.socket.nio.NioSocketChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageAggregator",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageDecoder",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpClientCodec"
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentDecompressor"
  },
  {
    "name": "io.netty.handler.codec.http.HttpObjectAggregator"
  },
  {
    "name": "io.netty.handler.codec.http.HttpServerCodec"
  },
  {
    "name": "io.netty.util.DefaultAttributeMap",
    "fields": [
      {
        "name": "attributes"
      }
    ]
  },
  {
    "name": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
    "fields": [
      {
        "name": "attributeMap"
      }
    ]
  },
  {
    "name": "io.netty.util.Recycler$DefaultHandle",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
    "fields": [
      {
        "name": "droppedRecords"
      },
      {
        "name": "head"
      }
    ]
  },
  {
    "name": "io.netty.util.concurrent.DefaultPromise",
    "fields": [
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "io.netty.util.concurrent.SingleThreadEventExecutor",
    "fields": [
      {
        "name": "state"
      },
      {
        "name": "threadProperties"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.BaseCmdTest",
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.BaseCmdTest$ExecOut",
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.BaseCmdTest$StreamGobbler"
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testInfo",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testInfoStatusTokenFail",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testInfoStatusUrlFail",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testInfoVersionFail",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.InfoCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testInvalidAuth",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testPipelineNotfound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testSubmitGithubPipeline",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testSubmitLaunchpadPipeline",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testSubmitLaunchpadPipelineWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testSubmitLaunchpadPipelineWithCustomName",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testSubmitLaunchpadPipelineWithLabels",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testSubmitLaunchpadPipelineWithOptimizationDisabled",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testSubmitToAWorkspace",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.LaunchCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.Tower",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithError",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithOverwrite",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithoutSubCommands",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteError",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListEmpty",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testPause",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testPauseAlreadyPausedItem",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testPauseError",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdate",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateInvalidName",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateName",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateWithError",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testView",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewNoActionFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewNoWorkspaceActionsFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.actions.ActionsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testListCollaborators",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.collaborators.CollaboratorsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.commands.AbstractApiCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.AbstractCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.AbstractRootCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.ActionsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.CollaboratorsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.ComputeEnvsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.CredentialsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.DataLinksCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.DataStudiosCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.DatasetsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.InfoCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.LaunchCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.LaunchCmd$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.MembersCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.OrganizationsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.ParticipantsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.PipelinesCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.RunsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.SecretsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.TeamsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.WorkspacesCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.AbstractActionsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.ActionRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.ActionRefOptions$ActionRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.LabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.add.AbstractAddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.add.AddGitHubCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.actions.add.AddTowerCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.collaborators.AbstractCollaboratorsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.collaborators.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.AbstractComputeEnvCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.ComputeEnvRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.ComputeEnvRefOptions$ComputeEnvRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.ExportCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.ImportCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.PrimaryCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AbstractAddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddAltairCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddAwsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddAzureCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddEksCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddGkeCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddGoogleBatchCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddGoogleLifeSciencesCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddK8sCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddLsfCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddMoabCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddSlurmCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.AddUgeCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.aws.AddAwsForgeCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.aws.AddAwsManualCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.azure.AddAzureForgeCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.add.azure.AddAzureManualCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AbstractPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AbstractPlatform$Environment",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AbstractPlatform$StagingOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AltairPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AltairPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchForgePlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchForgePlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchForgePlatform$EfsFileSystem",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchForgePlatform$FsxFileSystem",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchManualPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchManualPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AzBatchForgePlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AzBatchForgePlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AzBatchManualPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.AzBatchManualPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.EksPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.GkePlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.GoogleBatchPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.GoogleBatchPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.GoogleLifeSciencesPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.GoogleLifeSciencesPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.GoogleLifeSciencesPlatform$Filestore",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.K8sPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.K8sPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.LsfPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.LsfPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.MoabPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.MoabPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.SlurmPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.SlurmPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.UnivaPlatform",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.platforms.UnivaPlatform$AdvancedOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.primary.AbstractComputeEnvsPrimaryCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.primary.GetCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.computeenvs.primary.SetCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.AbstractCredentialsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.CredentialsRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.CredentialsRefOptions$CredentialsRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AbstractAddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddAgentCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddAwsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddAzureCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddBitbucketCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddCodeCommitCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddContainerRegistryCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddGiteaCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddGithubCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddGitlabCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddGoogleCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddK8sCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.add.AddSshCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.AbstractGitProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.AbstractProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.AwsProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.AwsProvider$Keys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.AzureProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.BitbucketProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.CodeCommitProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.ContainerRegistryProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.GiteaProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.GithubProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.GitlabProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.GoogleProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.K8sProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.K8sProvider$ClientCerts",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.K8sProvider$Keys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.SshProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.providers.TwAgentProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.AbstractUpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateAgentCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateAwsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateAzureCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateBitbucketCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateCodeCommitCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateContainerRegistryCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateGithubCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateGitlabCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateGoogleCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateK8sCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.credentials.update.UpdateSshCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.data.links.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.data.links.BrowseCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.data.links.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.data.links.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.data.links.SearchOption",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.data.links.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.AbstractDatasetsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.DatasetRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.DatasetRefOptions$DatasetRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.DownloadCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.UrlCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datasets.versions.VersionsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datastudios.AbstractStudiosCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.datastudios.DataStudioRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datastudios.DataStudioRefOptions$DataStudioRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.datastudios.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.global.PaginationOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.global.PaginationOptions$Pageable",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.global.PaginationOptions$Sizeable",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.global.ShowLabelsOption",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.global.WorkspaceOptionalOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.global.WorkspaceRequiredOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.AbstractLabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.AddLabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.DeleteLabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.Label$LabelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.Label$ResourceLabelsConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.LabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.LabelsOptionalOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.LabelsSubcmdOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.ListLabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.UpdateLabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.labels.UpdateLabelsCmd$UpdateOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.members.AbstractMembersClass",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.members.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.members.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.members.LeaveCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.members.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.members.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.AbstractOrganizationsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.OrganizationRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.OrganizationRefOptions$OrganizationRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.OrganizationsOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.organizations.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.participants.AbstractParticipantsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.participants.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.participants.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.participants.LeaveCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.participants.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.participants.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.AbstractPipelinesCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.ExportCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.ImportCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.LabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.LaunchOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.PipelineRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.PipelineRefOptions$PipelineRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.pipelines.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.AbstractRunsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.CancelCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.DumpCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.LabelsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.RelaunchCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.RunViewOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.download.DownloadCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.metrics.MetricsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.tasks.TaskCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.runs.tasks.TasksCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.secrets.AbstractSecretsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.secrets.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.secrets.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.secrets.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.secrets.SecretRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.secrets.SecretRefOptions$SecretRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.secrets.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.secrets.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.teams.AbstractTeamsCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.teams.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.teams.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.teams.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.teams.MembersCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.teams.members.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.teams.members.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.AbstractWorkspaceCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.AddCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.DeleteCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.LeaveCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.ListCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.UpdateCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.ViewCmd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.WorkspaceRefOptions",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.cli.commands.workspaces.WorkspaceRefOptions$WorkspaceRef",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAddWithoutSubCommands",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteInvalidAuth",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testExport",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testImport",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testImportWithOverwrite",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListEmpty",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testPrimaryGet",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testPrimarySet",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testPrimarySetAzure",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateInvalidName",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateName",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewAwsForge",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewAwsManual",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewInvalidAuth",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.ComputeEnvsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithEnvVars",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.AltairPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvanced",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithDeprecated",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithEFS",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithEnvVars",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithFSX",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.AwsBatchForgePlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddAdvanceOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.AwsBatchManualPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.AzBatchForgePlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.AzBatchManualPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.EksPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.GkePlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.GoogleBatchPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithFileStore",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.GoogleLifeSciencesPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithStaging",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.K8sPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.LsfPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.MoabPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.SlurmPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithAdvancedOptions",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.computeenvs.platforms.UnivaPlatformTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAddWithOverride",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testInvalidAuth",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListEmpty",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testMissingSubcommand",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testShowUsage",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.CredentialsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.AgentProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithOnlyAssumeRole",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testInvalidAuth",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdate",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.AwsProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.AzureProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.BitbucketProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithRepoURL",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.CodeCommitProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.ContainerRegistryProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.GiteaProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.GithubProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.GitlabProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testFileNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.GoogleProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAddWithCertificate",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithToken",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.K8sProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testInvalidPrivateKey",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.credentials.providers.SshProviderTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testBrowse",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testBuildingSearchParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testFilteredList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdate",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.data.DataLinksCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithOverwrite",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDownload",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testFileNotExistsError",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdate",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateWithFile",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUrl",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testVersions",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testView",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.datasets.DatasetsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testView",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.datastudios.DataStudiosCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.exceptions.ApiExceptionMessage",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAddResource",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddSimple",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteLabel",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListLabels",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListLabelsWithResourceTypeFilter",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListLabelsWithSimpleTypeFilter",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListLabelsWithTextFilter",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.labels.LabelsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testLeave",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithConflictingPageable",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithOffset",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithPage",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdate",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.members.MembersCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddError",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithOverwrite",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteError",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListEmpty",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdate",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateError",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateName",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testView",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.organizations.OrganizationsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAddMemberParticipantRole",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddParticipantWithOverwrite",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteMemberParticipant",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteTeam",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testLeave",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListTeam",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithConflictingPageable",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithOffset",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithPage",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateMemberParticipantRole",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateTeamParticipantRole",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.participants.ParticipantsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithComputeEnv",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithStagingScripts",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAppendLabels",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testApplyLabels",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteMultipleMatch",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testExport",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testImport",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testImportWithComputeEnv",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testImportWithOverwrite",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testImportWithoutWorkdir",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListEmpty",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListFromWorkspace",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListFromWorkspaceNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithConflictingPageable",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithOffset",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithPage",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testMissingComputeEnvironment",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testRemoveLabels",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdate",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateComputeEnv",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateInSharedWorkspaceWithoutCE",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdatePipelineInvalidName",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdatePipelineName",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testView",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.pipelines.PipelinesCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.responses.CredentialsAdded",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.CredentialsDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.CredentialsList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.CredentialsUpdated",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.InfoResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.Response",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.cli.responses.actions.ActionAdd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.actions.ActionUpdate",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.actions.ActionsDelete",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.actions.ActionsList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.actions.ActionsView",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.collaborators.CollaboratorsList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.computeenvs.ComputeEnvAdded",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.computeenvs.ComputeEnvDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.computeenvs.ComputeEnvExport",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.computeenvs.ComputeEnvList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.computeenvs.ComputeEnvUpdated",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.data.DataLinkContentList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.data.DataLinkDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.data.DataLinkView",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.data.DataLinksList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.data.DataStudiosView",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.datasets.DatasetCreate",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.datasets.DatasetDelete",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.datasets.DatasetList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.datasets.DatasetUpdate",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.datasets.DatasetUrl",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.datasets.DatasetVersionsList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.datasets.DatasetView",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.labels.DeleteLabelsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.labels.LabelAdded",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.labels.ListLabelsCmdResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.labels.ManageLabels",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.members.MembersAdded",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.members.MembersDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.members.MembersLeave",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.members.MembersList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.members.MembersUpdate",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.organizations.OrganizationsDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.organizations.OrganizationsList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.organizations.OrganizationsUpdated",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.participants.ParticipantAdded",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.participants.ParticipantDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.participants.ParticipantLeft",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.participants.ParticipantUpdated",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.participants.ParticipantsList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.pipelines.PipelinesList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.runs.RunCanceled",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.runs.RunDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.runs.RunList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.runs.RunSubmited",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.secrets.SecretAdded",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.secrets.SecretDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.secrets.SecretUpdated",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.secrets.SecretView",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.secrets.SecretsList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.teams.TeamAdded",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.teams.TeamDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.teams.TeamsList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.teams.members.TeamMemberDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.teams.members.TeamMembersAdd",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.teams.members.TeamMembersList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.workspaces.WorkspaceAdded",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.workspaces.WorkspaceDeleted",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.workspaces.WorkspaceList",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.workspaces.WorkspaceUpdated",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.cli.responses.workspaces.WorkspaceView",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testRunMetricsCondensed",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testRunMetricsExpanded",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.runs.MetricsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testCancel",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testCancelNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDownloadLog",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDownloadTaskLog",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDumpRuns",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testInvalidAuth",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListEmpty",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithConflictingPageable",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithOffset",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithPage",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testRelaunch",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testShowUsage",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testView",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.runs.RunsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testTaskDetail",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testTaskDetailWithNullValues",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.runs.TaskCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "listRunTasksTests",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.runs.TasksCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithOverride",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdate",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testView",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.secrets.SecretsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.shared.ComputeEnvExportFormat$ComputeConfigMixin",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testFormatDeserialization",
        "parameterTypes": [

        ]
      },
      {
        "name": "testFormatSerialization",
        "parameterTypes": [

        ]
      }
    ],
    "name": "io.seqera.tower.cli.shared.ComputeEnvExportFormatTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.shared.WorkflowMetadata",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrganizationId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrganizationName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPipelineId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRunUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithOrganizationNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithOverwrite",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteTeam",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListEmpty",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithConflictingPageable",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithOffset",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListWithPage",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.teams.TeamsCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDelete",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.teams.members.TeamMembersCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.cli.utils.VersionProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "leaveWorkspaceAsParticipantByIdAndWorkspaceReference",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAdd",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddOrganizationNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testAddWithOverwrite",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteById",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testDeleteNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testLeaveWorkspaceAsParticipantById",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testList",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListByOrganization",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testListEmpty",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateById",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateNameById",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testUpdateWorkspaceNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewById",
        "parameterTypes": [
          "io.seqera.tower.cli.commands.enums.OutputType",
          "org.mockserver.client.MockServerClient"
        ]
      },
      {
        "name": "testViewNotFound",
        "parameterTypes": [
          "org.mockserver.client.MockServerClient"
        ]
      }
    ],
    "name": "io.seqera.tower.cli.workspaces.WorkspacesCmdTest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.seqera.tower.model.AbstractGridConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getComputeQueue",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadQueue",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflowConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "setComputeQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeadQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPostRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ActionConfigType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.seqera.tower.model.ActionEventType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.seqera.tower.model.ActionResponseDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEvent",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHookId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHookUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastSeen",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunch",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSource",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.seqera.tower.model.ActionConfigType"
        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setEvent",
        "parameterTypes": [
          "io.seqera.tower.model.ActionEventType"
        ]
      },
      {
        "name": "setHookId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHookUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastSeen",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setLaunch",
        "parameterTypes": [
          "io.seqera.tower.model.Launch"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.seqera.tower.model.ActionSource"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.ActionStatus"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ActionSource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ActionStatus",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ActiveConnection",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.AddMemberRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getUser",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AddMemberResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setMember",
        "parameterTypes": [
          "io.seqera.tower.model.MemberDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AddParticipantRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMemberId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTeamId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserNameOrEmail",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AddParticipantResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setParticipant",
        "parameterTypes": [
          "io.seqera.tower.model.ParticipantDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AddTeamMemberResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setMember",
        "parameterTypes": [
          "io.seqera.tower.model.MemberDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AgentSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getConnectionId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getShared",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AltairPbsComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Analytics",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHubspotId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPosthogApiHost",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPosthogApiKey",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AssociatePipelineLabelsRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLabelIds",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPipelineIds",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AwsBatchConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCliPath",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComputeJobRole",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComputeQueue",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDragenInstanceType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDragenQueue",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getExecutionRole",
        "parameterTypes": [

        ]
      },
      {
        "name": "getForge",
        "parameterTypes": [

        ]
      },
      {
        "name": "getForgedResources",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFusion2Enabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobMemoryMb",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobRole",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadQueue",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLogGroup",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLustreId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflowConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNvnmeStorageEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRegion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStorageType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVolumes",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWaveEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCliPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComputeJobRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComputeQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDragenQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExecutionRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForge",
        "parameterTypes": [
          "io.seqera.tower.model.ForgeConfig"
        ]
      },
      {
        "name": "setForgedResources",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFusion2Enabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHeadJobCpus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHeadJobMemoryMb",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHeadJobRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeadQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNvnmeStorageEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPostRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVolumes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWaveEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setWorkDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AwsSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAccessKey",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAssumeRoleArn",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSecretKey",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AzBatchConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAutoPoolMode",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeleteJobsOnCompletion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeletePoolsOnCompletion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getForge",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFusion2Enabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadPool",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getManagedIdentityClientId_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflowConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRegion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTokenDuration",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWaveEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAutoPoolMode",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDeleteJobsOnCompletion",
        "parameterTypes": [
          "io.seqera.tower.model.JobCleanupPolicy"
        ]
      },
      {
        "name": "setDeletePoolsOnCompletion",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForge",
        "parameterTypes": [
          "io.seqera.tower.model.AzBatchForgeConfig"
        ]
      },
      {
        "name": "setHeadPool",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPostRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenDuration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AzBatchForgeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAutoScale",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContainerRegIds",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDisposeOnDeletion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVmCount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVmType",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAutoScale",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDisposeOnDeletion",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setVmCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setVmType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.AzureSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBatchKey",
        "parameterTypes": [

        ]
      },
      {
        "name": "getBatchName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStorageKey",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStorageName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.BitBucketSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CloudPriceModel",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CodeCommitSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ComputeConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.seqera.tower.model.ComputeEnvComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCredentialsId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeleted",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUsed",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPrimary",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceId",
        "parameterTypes": [

        ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeConfig"
        ]
      },
      {
        "name": "setCredentialsId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeEnvComputeConfig$PlatformEnum"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeEnvStatus"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ComputeEnvComputeConfig$PlatformEnum",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ComputeEnvDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.ComputeEnvResponseDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCredentialsId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeleted",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUsed",
        "parameterTypes": [

        ]
      },
      {
        "name": "getManagedIdentityId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPrimary",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceId",
        "parameterTypes": [

        ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeConfig"
        ]
      },
      {
        "name": "setCredentialsId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setLastUsed",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeEnvResponseDto$PlatformEnum"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeEnvStatus"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ComputeEnvResponseDto$PlatformEnum",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ComputeEnvStatus",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ComputePlatformDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.ConfigEnvVariable",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCompute",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHead",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ContainerRegistryKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRegistry",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateActionRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLaunch",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSource",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateActionResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setActionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateComputeEnvRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComputeEnv",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabelIds",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateComputeEnvResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setComputeEnvId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateCredentialsRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCredentials",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateCredentialsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCredentialsId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateDatasetRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateDatasetResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDataset",
        "parameterTypes": [
          "io.seqera.tower.model.Dataset"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateLabelRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getIsDefault",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [

        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateLabelResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIsDefault",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateOrganizationRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLogoId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrganization",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateOrganizationResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setOrganization",
        "parameterTypes": [
          "io.seqera.tower.model.OrganizationDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreatePipelineRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getIcon",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabelIds",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunch",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setLaunch",
        "parameterTypes": [
          "io.seqera.tower.model.WorkflowLaunchRequest"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreatePipelineResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setPipeline",
        "parameterTypes": [
          "io.seqera.tower.model.PipelineDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreatePipelineSecretRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreatePipelineSecretResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setSecretId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateTeamMemberRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getUserNameOrEmail",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateTeamRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAvatarId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTeam",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateTeamResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "io.seqera.tower.model.TeamDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateWorkspaceRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getWorkspace",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.CreateWorkspaceResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setWorkspace",
        "parameterTypes": [
          "io.seqera.tower.model.Workspace"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Credentials",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCategory",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeleted",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getKeys",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUsed",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [

        ]
      },
      {
        "name": "setBaseUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "io.seqera.tower.model.Credentials$ProviderEnum"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Credentials$ProviderEnum",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkContentResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setNextPageToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObjects",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOriginalPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkCreateRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCredentialsId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPublicAccessible",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResourceRef",
        "parameterTypes": [

        ]
      },
      {
        "name": "getType",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkCredentials",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [

        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "io.seqera.tower.model.DataLinkProvider"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCredentials",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHidden",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPublicAccessible",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRegion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResourceRef",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getType",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCredentials",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "io.seqera.tower.model.DataLinkProvider"
        ]
      },
      {
        "name": "setPublicAccessible",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRegion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.DataLinkStatus"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.seqera.tower.model.DataLinkType"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkItem",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMimeType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getType",
        "parameterTypes": [

        ]
      },
      {
        "name": "setMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.seqera.tower.model.DataLinkItemType"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkItemType",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDataLink",
        "parameterTypes": [
          "io.seqera.tower.model.DataLinkDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkStatus",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.model.DataLinkType",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinkUpdateRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCredentialsId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataLinksListResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDataLinks",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataStudioComputeEnvDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.DataStudioConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.DataStudioDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getActiveConnections",
        "parameterTypes": [

        ]
      },
      {
        "name": "getBaseImage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComputeEnv",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCustomImage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMountedDataLinks",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getParentCheckpoint",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProgress",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSessionId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatusInfo",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStudioUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTemplate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUser",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWaveBuildUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceId",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatusInfo",
        "parameterTypes": [
          "io.seqera.tower.model.DataStudioStatusInfo"
        ]
      },
      {
        "name": "setStudioUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTemplate",
        "parameterTypes": [
          "io.seqera.tower.model.DataStudioTemplate"
        ]
      },
      {
        "name": "setWorkspaceId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataStudioDtoParentCheckpoint",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.DataStudioProgressStep",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.DataStudioProgressStepStatus",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.model.DataStudioStatus",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataStudioStatusInfo",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "setLastUpdate",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.DataStudioStatus"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DataStudioTemplate",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getIcon",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRepository",
        "parameterTypes": [

        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepository",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Dataset",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeleted",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMediaType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMediaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DatasetVersionDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDatasetDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDatasetId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDatasetName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFileName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHasHeader",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMediaType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDatasetId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDatasetName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasHeader",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setMediaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeActionResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAction",
        "parameterTypes": [
          "io.seqera.tower.model.ActionResponseDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeComputeEnvResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setComputeEnv",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeEnvResponseDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeCredentialsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCredentials",
        "parameterTypes": [
          "io.seqera.tower.model.Credentials"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeDatasetResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDataset",
        "parameterTypes": [
          "io.seqera.tower.model.Dataset"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeLaunchResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setLaunch",
        "parameterTypes": [
          "io.seqera.tower.model.Launch"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeOrganizationResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setOrganization",
        "parameterTypes": [
          "io.seqera.tower.model.OrganizationDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribePipelineResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setPipeline",
        "parameterTypes": [
          "io.seqera.tower.model.PipelineDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeTaskResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setTask",
        "parameterTypes": [
          "io.seqera.tower.model.Task"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeUserResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDefaultWorkspaceId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNeedConsent",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.seqera.tower.model.UserDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeWorkflowLaunchResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setLaunch",
        "parameterTypes": [
          "io.seqera.tower.model.WorkflowLaunchResponse"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeWorkflowResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setProgress",
        "parameterTypes": [
          "io.seqera.tower.model.ProgressData"
        ]
      },
      {
        "name": "setWorkflow",
        "parameterTypes": [
          "io.seqera.tower.model.Workflow"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.DescribeWorkspaceResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setWorkspace",
        "parameterTypes": [
          "io.seqera.tower.model.Workspace"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.EksComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getClusterName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFusion2Enabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflowConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRegion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWaveEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ForgeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAllocStrategy",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAllowBuckets",
        "parameterTypes": [

        ]
      },
      {
        "name": "getArm64Enabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getBidPercentage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDisposeOnDeletion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDragenAmiId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDragenEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDragenInstanceType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEbsAutoScale",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEbsBlockSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEbsBootSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEc2KeyPair",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEcsConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEfsCreate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEfsId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEfsMount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFargateHeadEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFsxMount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFsxName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFsxSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFusionEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getGpuEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getImageId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getInstanceTypes",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMinCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSecurityGroups",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSubnets",
        "parameterTypes": [

        ]
      },
      {
        "name": "getType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVpcId",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAllocStrategy",
        "parameterTypes": [
          "io.seqera.tower.model.ForgeConfig$AllocStrategyEnum"
        ]
      },
      {
        "name": "setAllowBuckets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setArm64Enabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBidPercentage",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDisposeOnDeletion",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDragenAmiId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDragenEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEbsAutoScale",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEbsBlockSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEc2KeyPair",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEfsCreate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEfsId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEfsMount",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFargateHeadEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFsxMount",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFsxName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFsxSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFusionEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGpuEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setImageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstanceTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxCpus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinCpus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSecurityGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSubnets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.seqera.tower.model.ForgeConfig$TypeEnum"
        ]
      },
      {
        "name": "setVpcId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ForgeConfig$AllocStrategyEnum",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.model.ForgeConfig$TypeEnum",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GetProgressResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setProgress",
        "parameterTypes": [
          "io.seqera.tower.model.ProgressData"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GetWorkflowMetricsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setMetrics",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GitHubSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GitLabSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [

        ]
      },
      {
        "name": "getToken",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GiteaSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GithubActionConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEvents",
        "parameterTypes": [

        ]
      },
      {
        "name": "setEvents",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GithubActionEvent",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCommitId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCommitMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPusherEmail",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPusherName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRef",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTimestamp",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCommitId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCommitMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPusherEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPusherName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GkeComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getClusterName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFusion2Enabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflowConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRegion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWaveEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GoogleBatchConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBootDiskSizeGb",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComputeJobsInstanceTemplate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCopyImage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCpuPlatform",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDebugMode",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFusion2Enabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobInstanceTemplate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobMemoryMb",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMachineType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNetwork",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflowConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNfsMount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNfsTarget",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProjectId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getServiceAccount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSpot",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSshDaemon",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSshImage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSubnetwork",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUsePrivateAddress",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWaveEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GoogleLifeSciencesConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBootDiskSizeGb",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCopyImage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDebugMode",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobMemoryMb",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflowConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNfsMount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNfsTarget",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreemptible",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProjectId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRegion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSshDaemon",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSshImage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUsePrivateAddress",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getZones",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.GoogleSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getData",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.JobCleanupPolicy",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.JobInfoDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.K8sComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComputeServiceAccount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobMemoryMb",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadPodSpec",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadServiceAccount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNamespace",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflowConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPodCleanup",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getServer",
        "parameterTypes": [

        ]
      },
      {
        "name": "getServicePodSpec",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSslCert",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStorageClaimName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStorageMountPath",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.K8sSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCertificate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": [

        ]
      },
      {
        "name": "getToken",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.LabelDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getIsDefault",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [

        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIsDefault",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.LabelType",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Launch",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComputeEnv_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfigProfiles",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfigText",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEntryName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobMemoryMb",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchContainer",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMainScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOptimizationId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOptimizationTargets",
        "parameterTypes": [

        ]
      },
      {
        "name": "getParamsText",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPipeline",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPullLatest",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResume",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResumeLaunchId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRevision",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRunName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSchemaName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSessionId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStubRun",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTowerConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserSecrets",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceSecrets",
        "parameterTypes": [

        ]
      },
      {
        "name": "setComputeEnv_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setConfigProfiles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setConfigText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setEntryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeadJobCpus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHeadJobMemoryMb",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setLaunchContainer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMainScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptimizationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptimizationTargets",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParamsText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPipeline",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPostRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPullLatest",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setResume",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setResumeLaunchId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRevision",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRunName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStubRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTowerConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserSecrets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWorkDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkspaceSecrets",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListActionsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setActions",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListActionsResponseActionInfo",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEndpoint",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEvent",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastSeen",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPipeline",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSource",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUsageCmd",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setEndpoint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEvent",
        "parameterTypes": [
          "io.seqera.tower.model.ActionEventType"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastSeen",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPipeline",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.seqera.tower.model.ActionSource"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.ActionStatus"
        ]
      },
      {
        "name": "setUsageCmd",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListComputeEnvsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setComputeEnvs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListComputeEnvsResponseEntry",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCredentialsId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUsed",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPrimary",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRegion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUsed",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeEnvStatus"
        ]
      },
      {
        "name": "setVisibility",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkspaceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListCredentialsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCredentials",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListDatasetVersionsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListDatasetsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDatasets",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListLabelsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setLabels",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTotalSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListMembersResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setMembers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTotalSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListParticipantsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setParticipants",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTotalSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListPipelineSecretsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setPipelineSecrets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTotalSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListPipelinesResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setPipelines",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTotalSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListTasksResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setTasks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListTeamResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setTeams",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListWorkflowsResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setWorkflows",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListWorkflowsResponseListWorkflowsElement",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOptimized",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProgress",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStarred",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkflow",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setStarred",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setWorkflow",
        "parameterTypes": [
          "io.seqera.tower.model.WorkflowDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ListWorkspacesAndOrgResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setOrgsAndWorkspaces",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.LsfComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPerJobMemLimit",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPerTaskReserve",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUnitForLimits",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.MemberDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAvatar",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEmail",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFirstName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemberId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRole",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAvatar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMemberId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.seqera.tower.model.OrgRole"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.MoabComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.NavbarConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMenus",
        "parameterTypes": [

        ]
      },
      {
        "name": "setMenus",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.NavbarConfigNavbarMenu",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabel",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.OrgAndWorkspaceDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgLogoUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRoles",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceFullName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setOrgId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setOrgLogoUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrgName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVisibility",
        "parameterTypes": [
          "io.seqera.tower.model.Visibility"
        ]
      },
      {
        "name": "setWorkspaceFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkspaceId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setWorkspaceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.OrgRole",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Organization",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFullName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWebsite",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.OrganizationDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFullName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLogoId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLogoUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemberId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemberRole",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPaying",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWebsite",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMemberId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMemberRole",
        "parameterTypes": [
          "io.seqera.tower.model.OrgRole"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrgId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setWebsite",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ParticipantDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEmail",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFirstName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemberId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgRole",
        "parameterTypes": [

        ]
      },
      {
        "name": "getParticipantId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTeamAvatarUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTeamId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTeamName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserAvatarUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWspRole",
        "parameterTypes": [

        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMemberId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setOrgRole",
        "parameterTypes": [
          "io.seqera.tower.model.OrgRole"
        ]
      },
      {
        "name": "setParticipantId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTeamAvatarUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTeamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTeamName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.seqera.tower.model.ParticipantType"
        ]
      },
      {
        "name": "setUserAvatarUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWspRole",
        "parameterTypes": [
          "io.seqera.tower.model.WspRole"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ParticipantType",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.PipelineDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComputeEnv",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeleted",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getIcon",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOptimizationId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOptimizationStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOptimizationTargets",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOrgName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPipelineId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRepository",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserFirstName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserLastName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setComputeEnv",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeEnvDbDto"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLabels",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptimizationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptimizationStatus",
        "parameterTypes": [
          "io.seqera.tower.model.PipelineOptimizationStatus"
        ]
      },
      {
        "name": "setOptimizationTargets",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrgId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setOrgName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPipelineId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRepository",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserFirstName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUserLastName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVisibility",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkspaceId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setWorkspaceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.PipelineOptimizationStatus",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.PipelineSecret",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUsed",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setId_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.PodCleanupPolicy",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.seqera.tower.model.ProcessLoad",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.ProgressData",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setProcessesProgress",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWorkflowProgress",
        "parameterTypes": [
          "io.seqera.tower.model.WorkflowLoad"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ResourceData",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMax",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxLabel",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMean",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMin",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMinLabel",
        "parameterTypes": [

        ]
      },
      {
        "name": "getQ1",
        "parameterTypes": [

        ]
      },
      {
        "name": "getQ1Label",
        "parameterTypes": [

        ]
      },
      {
        "name": "getQ2",
        "parameterTypes": [

        ]
      },
      {
        "name": "getQ2Label",
        "parameterTypes": [

        ]
      },
      {
        "name": "getQ3",
        "parameterTypes": [

        ]
      },
      {
        "name": "getQ3Label",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWarnings",
        "parameterTypes": [

        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setMaxLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMean",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setMinLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQ1",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setQ1Label",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQ2",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setQ2Label",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQ3",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setQ3Label",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWarnings",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.SSHSecurityKeys",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPassphrase",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.SecurityKeys",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.seqera.tower.model.ServiceInfo",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAllowInstanceCredentials",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAllowLocalRepos",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAllowNextflowCliLogs",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAnalytics",
        "parameterTypes": [

        ]
      },
      {
        "name": "getApiVersion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAuthTypes",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCommitId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContactEmail",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContentMaxFileSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContentUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEvalWorkspaceIds",
        "parameterTypes": [

        ]
      },
      {
        "name": "getForgePrefix",
        "parameterTypes": [

        ]
      },
      {
        "name": "getGroundswellAllowedWorkspaces",
        "parameterTypes": [

        ]
      },
      {
        "name": "getGroundswellEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeartbeatInterval",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLandingUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLoginPath",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLogoutUrl_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNavbar",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSeqeraCloud",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTermsOfUseUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserWorkspaceEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWaveEnabled",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAllowInstanceCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowLocalRepos",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAnalytics",
        "parameterTypes": [
          "io.seqera.tower.model.Analytics"
        ]
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCommitId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentMaxFileSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setContentUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeartbeatInterval",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLandingUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNavbar",
        "parameterTypes": [
          "io.seqera.tower.model.NavbarConfig"
        ]
      },
      {
        "name": "setTermsOfUseUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserWorkspaceEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaveEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.ServiceInfoResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setServiceInfo",
        "parameterTypes": [
          "io.seqera.tower.model.ServiceInfo"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.SlurmComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setHeadJobOptions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHostName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLaunchDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxQueueSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPropagateHeadJobOptions",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.StudioUser",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.SubmitWorkflowLaunchRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLaunch",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.SubmitWorkflowLaunchResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setWorkflowId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Task",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAttempt",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCloudZone",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComplete",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContainer",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCost",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDisk",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDuration",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnv",
        "parameterTypes": [

        ]
      },
      {
        "name": "getErrorAction",
        "parameterTypes": [

        ]
      },
      {
        "name": "getExecutor",
        "parameterTypes": [

        ]
      },
      {
        "name": "getExit",
        "parameterTypes": [

        ]
      },
      {
        "name": "getExitStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHash",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getInvCtxt",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMachineType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemory",
        "parameterTypes": [

        ]
      },
      {
        "name": "getModule",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNativeId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPcpu",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPeakRss",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPeakVmem",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPmem",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPriceModel",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProcess",
        "parameterTypes": [

        ]
      },
      {
        "name": "getQueue",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRchar",
        "parameterTypes": [

        ]
      },
      {
        "name": "getReadBytes",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRealtime",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRss",
        "parameterTypes": [

        ]
      },
      {
        "name": "getScratch",
        "parameterTypes": [

        ]
      },
      {
        "name": "getScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStart",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSubmit",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSyscr",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSyscw",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTag",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTaskId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTime",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVmem",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVolCtxt",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWchar",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkdir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWriteBytes",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAttempt",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCloudZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComplete",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setContainer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCost",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setCpus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDateCreated_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setDisk",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDuration",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setEnv",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExitStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setInvCtxt",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLastUpdated_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setMachineType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMemory",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setModule",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNativeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPcpu",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setPeakRss",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPeakVmem",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPmem",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setPriceModel",
        "parameterTypes": [
          "io.seqera.tower.model.CloudPriceModel"
        ]
      },
      {
        "name": "setProcess",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRchar",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setReadBytes",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRealtime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRss",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setScratch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStart",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.TaskStatus"
        ]
      },
      {
        "name": "setSubmit",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setSyscr",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setSyscw",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTaskId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setVmem",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setVolCtxt",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setWchar",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setWorkdir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWriteBytes",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.TaskStatus",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Team",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.TeamDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getAvatarUrl",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMembersCount",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTeamId",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAvatarUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMembersCount",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTeamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UnivaComputeConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDiscriminator",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHostName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMaxQueueSize",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPropagateHeadJobOptions",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdateActionRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLaunch",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdateComputeEnvRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCredentialsId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdateCredentialsRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCredentials",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdateDatasetRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdateMemberRoleRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getRole",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdateOrganizationRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFullName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLogoId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPaying_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWebsite",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdateParticipantRoleRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getRole",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdatePipelineRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getIcon",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabelIds",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunch",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdatePipelineResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setPipeline",
        "parameterTypes": [
          "io.seqera.tower.model.PipelineDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdatePipelineSecretRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UpdateWorkspaceRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFullName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UploadDatasetVersionResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "io.seqera.tower.model.DatasetVersionDbDto"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.UserDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAvatar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAvatarId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLastAccess",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setLastName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setMarketingConsent",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNotification",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOrganization",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTermsOfUseConsent",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Visibility",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.WfManifest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.WfNextflow",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.WfStats",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.seqera.tower.model.Workflow",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCommandLine",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCommitId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComplete",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfigFiles",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfigText",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContainer",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContainerEngine",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeleted",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDuration",
        "parameterTypes": [

        ]
      },
      {
        "name": "getErrorMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getErrorReport",
        "parameterTypes": [

        ]
      },
      {
        "name": "getExitStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHomeDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLogFile",
        "parameterTypes": [

        ]
      },
      {
        "name": "getManifest",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflow",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOperationId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOutFile",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOwnerId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getParams",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProfile",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProjectDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProjectName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRepository",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRequiresAttention",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResume",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRevision",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRunName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getScriptFile",
        "parameterTypes": [

        ]
      },
      {
        "name": "getScriptId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getScriptName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSessionId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStart",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStats",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSubmit",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSuccess",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCommandLine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCommitId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComplete",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setConfigFiles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setConfigText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContainer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContainerEngine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateCreated_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setDuration",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setErrorMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorReport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExitStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHomeDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUpdated_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setLaunchDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLaunchId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManifest",
        "parameterTypes": [
          "io.seqera.tower.model.WfManifest"
        ]
      },
      {
        "name": "setNextflow",
        "parameterTypes": [
          "io.seqera.tower.model.WfNextflow"
        ]
      },
      {
        "name": "setOperationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOutFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setProfile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProjectDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProjectName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepository",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResume",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRevision",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRunName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScriptFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScriptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScriptName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStart",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setStats",
        "parameterTypes": [
          "io.seqera.tower.model.WfStats"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.seqera.tower.model.WorkflowStatus"
        ]
      },
      {
        "name": "setSubmit",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setSuccess",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.WorkflowDbDto",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCommandLine",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCommitId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComplete",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfigFiles",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfigText",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContainer",
        "parameterTypes": [

        ]
      },
      {
        "name": "getContainerEngine",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDeleted",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDuration",
        "parameterTypes": [

        ]
      },
      {
        "name": "getErrorMessage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getErrorReport",
        "parameterTypes": [

        ]
      },
      {
        "name": "getExitStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHomeDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getManifest",
        "parameterTypes": [

        ]
      },
      {
        "name": "getNextflow",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOwnerId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getParams",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProfile",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProjectDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProjectName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRepository",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRequiresAttention",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResume",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRevision",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRunName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getScriptFile",
        "parameterTypes": [

        ]
      },
      {
        "name": "getScriptId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getScriptName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSessionId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStart",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStats",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSubmit",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSuccess",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCommandLine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setOwnerId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRunName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubmit",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.WorkflowLaunchRequest",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getComputeEnvId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfigProfiles",
        "parameterTypes": [

        ]
      },
      {
        "name": "getConfigText",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEntryName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHeadJobMemoryMb",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLabelIds",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLaunchContainer",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMainScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOptimizationId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getOptimizationTargets",
        "parameterTypes": [

        ]
      },
      {
        "name": "getParamsText",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPipeline",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPostRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPreRunScript",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPullLatest",
        "parameterTypes": [

        ]
      },
      {
        "name": "getResume",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRevision",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRunName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSchemaName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSessionId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getStubRun",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTowerConfig",
        "parameterTypes": [

        ]
      },
      {
        "name": "getUserSecrets",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkDir",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWorkspaceSecrets",
        "parameterTypes": [

        ]
      },
      {
        "name": "setComputeEnvId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPipeline",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPullLatest",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setResume",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRevision",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStubRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setWorkDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.WorkflowLaunchResponse",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setComputeEnv",
        "parameterTypes": [
          "io.seqera.tower.model.ComputeEnvComputeConfig"
        ]
      },
      {
        "name": "setConfigProfiles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setConfigText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setEntryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMainScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParamsText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPipeline",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPostRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreRunScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPullLatest",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setResume",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setResumeCommitId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResumeDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRevision",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStubRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTowerConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserSecrets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWorkDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkspaceSecrets",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.WorkflowLoad",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCached",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCost",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCpuEfficiency",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCpuLoad",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCpuTime",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getExecutors",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFailed",
        "parameterTypes": [

        ]
      },
      {
        "name": "getInvCtxSwitch",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLoadCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLoadMemory",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLoadTasks",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemoryEfficiency",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemoryReq",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemoryRss",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPeakCpus",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPeakMemory",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPeakTasks",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPending",
        "parameterTypes": [

        ]
      },
      {
        "name": "getReadBytes",
        "parameterTypes": [

        ]
      },
      {
        "name": "getRunning",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSubmitted",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSucceeded",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVolCtxSwitch",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWriteBytes",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCached",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCost",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setCpuEfficiency",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setCpuLoad",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCpuTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCpus",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setExecutors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFailed",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setInvCtxSwitch",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setLoadCpus",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLoadMemory",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLoadTasks",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMemoryEfficiency",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setMemoryReq",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMemoryRss",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPeakCpus",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPeakMemory",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPeakTasks",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPending",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setReadBytes",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRunning",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setSubmitted",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setSucceeded",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setVolCtxSwitch",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setWriteBytes",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.WorkflowMetrics",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCpu",
        "parameterTypes": [

        ]
      },
      {
        "name": "getCpuUsage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMem",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMemUsage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getProcess",
        "parameterTypes": [

        ]
      },
      {
        "name": "getReads",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTime",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTimeUsage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVmem",
        "parameterTypes": [

        ]
      },
      {
        "name": "getWrites",
        "parameterTypes": [

        ]
      },
      {
        "name": "setCpu",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      },
      {
        "name": "setCpuUsage",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      },
      {
        "name": "setId_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setMem",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      },
      {
        "name": "setMemUsage",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      },
      {
        "name": "setProcess",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReads",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      },
      {
        "name": "setTimeUsage",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      },
      {
        "name": "setVmem",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      },
      {
        "name": "setWrites",
        "parameterTypes": [
          "io.seqera.tower.model.ResourceData"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.WorkflowStatus",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.Workspace",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDateCreated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [

        ]
      },
      {
        "name": "getFullName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId_JsonNullable",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLastUpdated",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [

        ]
      },
      {
        "name": "setDateCreated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId_JsonNullable",
        "parameterTypes": [
          "org.openapitools.jackson.nullable.JsonNullable"
        ]
      },
      {
        "name": "setLastUpdated",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVisibility",
        "parameterTypes": [
          "io.seqera.tower.model.Visibility"
        ]
      }
    ]
  },
  {
    "name": "io.seqera.tower.model.WspRole",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "java.io.FileNotFoundException",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.IOException",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Cloneable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Comparable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Double",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Enum"
  },
  {
    "name": "java.lang.Float",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Number",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.System",
    "methods": [
      {
        "name": "console",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.constant.ConstantDesc",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.invoke.MethodHandle"
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": [

        ]
      },
      {
        "name": "getName",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "java.math.BigDecimal",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.nio.Bits",
    "methods": [
      {
        "name": "unaligned",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address"
      }
    ]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [
      {
        "name": "alignedSlice",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.file.Path"
  },
  {
    "name": "java.nio.file.Paths",
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.security.cert.Certificate",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.security.cert.PKIXRevocationChecker"
  },
  {
    "name": "java.sql.Connection"
  },
  {
    "name": "java.sql.Driver"
  },
  {
    "name": "java.sql.DriverManager",
    "methods": [
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Time",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Timestamp",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.Duration",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Instant",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalDate",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.MonthDay",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.OffsetDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.OffsetTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Period",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Year",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.YearMonth",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZoneId",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZoneOffset",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZonedDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.util.HashSet"
  },
  {
    "name": "java.util.LinkedHashSet"
  },
  {
    "name": "java.util.Locale",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.concurrent.ArrayBlockingQueue"
  },
  {
    "name": "java.util.concurrent.ForkJoinTask",
    "fields": [
      {
        "name": "aux"
      },
      {
        "name": "status"
      }
    ]
  },
  {
    "name": "java.util.concurrent.LinkedTransferQueue",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "java.util.concurrent.TimeUnit",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.locks.AbstractOwnableSynchronizer"
  },
  {
    "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer"
  },
  {
    "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
  },
  {
    "name": "java.util.concurrent.locks.ReentrantLock"
  },
  {
    "name": "java.util.concurrent.locks.ReentrantLock$NonfairSync"
  },
  {
    "name": "java.util.concurrent.locks.ReentrantLock$Sync"
  },
  {
    "name": "java.util.function.Consumer",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.inject.Named",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "javax.inject.Singleton",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.naming.InitialContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "lookup",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "javax.ws.rs.client.Entity",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAnnotations",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [

        ]
      },
      {
        "name": "getEntity",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLanguage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMediaType",
        "parameterTypes": [

        ]
      },
      {
        "name": "getVariant",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "javax.ws.rs.core.MediaType",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getParameters",
        "parameterTypes": [

        ]
      },
      {
        "name": "getSubtype",
        "parameterTypes": [

        ]
      },
      {
        "name": "getType",
        "parameterTypes": [

        ]
      },
      {
        "name": "isWildcardSubtype",
        "parameterTypes": [

        ]
      },
      {
        "name": "isWildcardType",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "javax.ws.rs.core.Variant",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLanguage",
        "parameterTypes": [

        ]
      },
      {
        "name": "getLanguageString",
        "parameterTypes": [

        ]
      },
      {
        "name": "getMediaType",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "jdk.nashorn.api.scripting.NashornScriptEngineFactory"
  },
  {
    "name": "org.apache.johnzon.mapper.Mapper"
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.hk2.internal.PerThreadContext",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.glassfish.jersey.client.ChunkedInputReader",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.client.ClientAsyncExecutor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.glassfish.jersey.client.ClientBackgroundScheduler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.glassfish.jersey.client.DefaultClientAsyncExecutorProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.glassfish.jersey.client.DefaultClientBackgroundSchedulerProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.glassfish.jersey.client.JerseyClientBuilder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.inject.hk2.ContextInjectionResolverImpl",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.inject.hk2.Hk2InjectionManagerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.inject.hk2.Hk2RequestScope",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.inject.hk2.InstanceSupplierFactoryBridge",
    "methods": [
      {
        "name": "provide",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.inject.hk2.JerseyErrorService",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.inject.hk2.RequestContext",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.jersey.process.internal.RequestScope"
        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.internal.JaxrsProviders",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.internal.RuntimeDelegateImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.internal.inject.Custom",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.glassfish.jersey.internal.util.collection.ConcurrentHashMapV8",
    "fields": [
      {
        "name": "baseCount"
      },
      {
        "name": "cellsBusy"
      },
      {
        "name": "sizeCtl"
      },
      {
        "name": "transferIndex"
      },
      {
        "name": "transferOrigin"
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.internal.util.collection.ConcurrentHashMapV8$CounterCell",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.jackson.JacksonFeature",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.jackson.internal.JacksonAutoDiscoverable",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JacksonJaxbJsonProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JacksonJsonProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.media.multipart.MultiPartFeature",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.media.multipart.internal.MultiPartReaderClientSide",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.ws.rs.ext.Providers"
        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.media.multipart.internal.MultiPartWriter",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.ws.rs.ext.Providers"
        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.AbstractFormProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.glassfish.jersey.message.internal.AbstractMessageReaderWriterProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.glassfish.jersey.message.internal.BasicTypesMessageProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.ByteArrayProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.DataSourceProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.FileProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.FormMultivaluedMapProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.FormProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.InputStreamProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.ReaderProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.RenderedImageProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.SourceProvider$DomSourceReader",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.inject.Provider"
        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.SourceProvider$SaxSourceReader",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.inject.Provider"
        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.SourceProvider$SourceWriter",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.inject.Provider",
          "javax.inject.Provider"
        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.SourceProvider$StreamSourceReader",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.StreamingOutputProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.message.internal.StringMessageProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.process.internal.RequestScope",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.glassfish.jersey.spi.AbstractThreadPoolProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.glassfish.jersey.spi.ScheduledThreadPoolExecutorProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "preDestroy",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.glassfish.jersey.spi.ThreadPoolExecutorProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "preDestroy",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.json.JSONObject"
  },
  {
    "name": "org.jvnet.hk2.internal.DynamicConfigurationServiceImpl",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.hk2.api.ServiceLocator"
        ]
      }
    ]
  },
  {
    "name": "org.jvnet.hk2.internal.ServiceLocatorRuntimeImpl",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.hk2.api.ServiceLocator"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.codec.MockServerHttpClientCodec"
  },
  {
    "name": "org.mockserver.codec.MockServerHttpServerCodec"
  },
  {
    "name": "org.mockserver.dashboard.DashboardWebSocketHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.httpclient.HttpClientConnectionErrorHandler",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.httpclient.HttpClientHandler",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.httpclient.HttpClientInitializer"
  },
  {
    "name": "org.mockserver.junit.jupiter.MockServerExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.mockserver.mock.Expectation",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHttpError",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpForward",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpForwardClassCallback",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpForwardObjectCallback",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpForwardTemplate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpOverrideForwardedRequest",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpRequest",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpResponse",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpResponseClassCallback",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpResponseObjectCallback",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpResponseTemplate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPriority",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTimeToLive",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTimes",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.mockserver.model.HttpForward$Scheme",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.model.HttpTemplate$TemplateType",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.model.MediaType",
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.model.ObjectWithJsonToString",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.model.ObjectWithReflectiveEqualsHashCodeToString",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.model.PathModifier",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.model.SocketAddress",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.model.SocketAddress$Scheme",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.model.X509Certificate",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.netty.HttpRequestHandler",
    "methods": [
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.netty.MockServerUnificationInitializer"
  },
  {
    "name": "org.mockserver.netty.unification.HttpContentLengthRemover"
  },
  {
    "name": "org.mockserver.netty.unification.PortBinding",
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.netty.unification.PortUnificationHandler",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.netty.websocketregistry.CallbackWebSocketServerHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.serialization.Base64Converter",
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.serialization.model.ConnectionOptionsDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.CookiesModifierDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.DTO",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.mockserver.serialization.model.DelayDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.ExpectationDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpError",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpForward",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpForwardClassCallback",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpForwardObjectCallback",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpForwardTemplate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpOverrideForwardedRequest",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpRequest",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpResponse",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpResponseClassCallback",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpResponseObjectCallback",
        "parameterTypes": [

        ]
      },
      {
        "name": "getHttpResponseTemplate",
        "parameterTypes": [

        ]
      },
      {
        "name": "getId",
        "parameterTypes": [

        ]
      },
      {
        "name": "getPriority",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTimeToLive",
        "parameterTypes": [

        ]
      },
      {
        "name": "getTimes",
        "parameterTypes": [

        ]
      },
      {
        "name": "setHttpRequest",
        "parameterTypes": [
          "org.mockserver.serialization.model.RequestDefinitionDTO"
        ]
      },
      {
        "name": "setHttpResponse",
        "parameterTypes": [
          "org.mockserver.serialization.model.HttpResponseDTO"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTimeToLive",
        "parameterTypes": [
          "org.mockserver.serialization.model.TimeToLiveDTO"
        ]
      },
      {
        "name": "setTimes",
        "parameterTypes": [
          "org.mockserver.serialization.model.TimesDTO"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.serialization.model.HeadersModifierDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpClassCallbackDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpErrorDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpForwardDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpObjectCallbackDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpOverrideForwardedRequestDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpRequestDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpRequestModifierDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpResponseDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "org.mockserver.serialization.model.BodyWithContentTypeDTO"
        ]
      },
      {
        "name": "setHeaders",
        "parameterTypes": [
          "org.mockserver.model.Headers"
        ]
      },
      {
        "name": "setStatusCode",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.mockserver.serialization.model.HttpResponseModifierDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.HttpTemplateDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.KeysAndValuesModifierDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.serialization.model.KeysToMultiValuesModifierDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.serialization.model.NotDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.serialization.model.QueryParametersModifierDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.mockserver.serialization.model.RequestDefinitionDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.mockserver.serialization.model.TimesDTO",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "org.osgi.framework.BundleReference"
  },
  {
    "name": "org.slf4j.Logger"
  },
  {
    "name": "picocli.AutoComplete$GenerateCompletion",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "picocli.CommandLine$AutoHelpMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "picocli.CommandLine$NoVersionProvider",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "sun.misc.Unsafe",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      }
    ]
  },
  {
    "name": "sun.misc.VM"
  },
  {
    "name": "sun.net.www.protocol.http.ntlm.NTLMAuthentication",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "int",
          "java.net.PasswordAuthentication"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.net.URL",
          "java.net.PasswordAuthentication"
        ]
      },
      {
        "name": "isTrustedSite",
        "parameterTypes": [
          "java.net.URL"
        ]
      },
      {
        "name": "supportsTransparentAuth",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "publicSelectedKeys"
      },
      {
        "name": "selectedKeys"
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  }
]